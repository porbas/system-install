---

#
# ansible-playbook chroot.yml -i inventory -e partition=partition-encrypted-tmpfs
#


- hosts: "localhost"
  sudo: yes
  sudo_user: root
  connection: local

  vars:
    - distrib: trusty
    - mirror: http://archive.ubuntu.com/ubuntu/
    - partition: partition-whole-disk
    - path: /srv/target
    - si_extra_packages:
      - openssh-server
      - grub-pc
      - python
      - python-apt
      - lsb-release
      - mdadm
      - ubuntu-minimal
      - ubuntu-standard
      - ntp
    - boot_device:
      - /dev/sda
      - /dev/sdb

  tasks:
    - name: install debootstrap
      apt: pkg='{{ item }}' state=present update_cache=yes
      with_items:
        - debootstrap
        - cryptsetup
        - python-requests

    - name: Fix debootstrap scripts
      copy:
        src="files/{{ item }}"
        dest="/{{ item }}"
      with_items:
        - usr/share/debootstrap/scripts/sid
        - usr/share/debootstrap/scripts/gutsy

    - name: Link recent distributions
      file:
        src='{{ item.def }}'
        dest='/usr/share/debootstrap/scripts/{{ item.dist }}'
        state=link
      with_items:
        - { dist: trusty, def: gutsy }


    - name: Install Linux on local hard drive. This might take some time...
      system_install:
        extra_packages='{{ si_extra_packages }}'
        repository='{{ mirror }}'
        distro='{{ distrib }}'
        kernel=yes
        partition='{{ partition }}'
        boot_device='{{ boot_device }}'
        path='{{ path }}'

    # Fix ssh configuration that prevent root login with password.
    - name: Fix ssh login
      lineinfile:
        dest=/srv/target/etc/ssh/sshd_config
        regexp='^PermitRootLogin .*'
        line='PermitRootLogin yes'
        backrefs=yes

    - name: configure grub
      lineinfile:
        dest: /srv/target/etc/default/grub
        regexp: '{{ item.r }}'
        line: '{{ item.l }}'
        backrefs: yes
      with_items:
        - { r: '^.*(GRUB_HIDDEN_TIMEOUT\s*=.*)', l: '# \1' }
        - { r: '^.*(GRUB_TERMINAL).*', l: '\1=console' }
        - { r: '^.*(GRUB_CMDLINE_LINUX_DEFAULT).*' , l: '\1="verbose"' }
        - { r: '^.*(GRUB_TIMEOUT).*=.*', l: '\1="5"' }

    # system-install module doesn't make it correctly :(
    - name: install fstab
      command: cp /tmp/fai/fstab {{ path }}/etc/fstab

    - name: install /etc/network/interfaces
      template:
        src: templates/network_interfaces
        dest: "{{ path }}/etc/network/interfaces"

    - name: generate mdadm.conf
      shell: "/usr/share/mdadm/mkconf > {{ path }}/etc/mdadm/mdadm.conf"

- name: lets play with freshly created chroot
  hosts: chroot
  connection: chroot

  vars:
    - distrib: trusty
    - components: main restricted universe multiverse
    - add_repo:
      - "deb http://pl.archive.ubuntu.com/ubuntu {{ distrib }}"
      - "deb http://pl.archive.ubuntu.com/ubuntu {{ distrib }}-updates"
      - "deb http://pl.archive.ubuntu.com/ubuntu {{ distrib }}-backports"
      - "deb http://security.ubuntu.com/ubuntu {{ distrib }}-security"

  tasks:
    - name: add apt sources
      apt_repository:
        repo: "{{ item }} {{ components }}"
        state: present
        update_cache: no
      with_items: add_repo

    - name: remove apt generic source
      apt_repository:
        repo: "deb http://archive.ubuntu.com/ubuntu trusty main restricted universe multiverse"
        state: absent
        update_cache: yes

    - name: install default locale
      command: locale-gen en_US.UTF-8


# vim:ft=ansible
